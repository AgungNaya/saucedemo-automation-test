{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 2,
    "pending": 1,
    "failures": 0,
    "start": "2025-06-27T18:04:07.025Z",
    "end": "2025-06-27T18:04:19.798Z",
    "duration": 12773,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 33.33333333333333,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b940287b-776a-461c-9fb5-ea2772e20c7c",
      "title": "",
      "fullFile": "C:\\xampp\\htdocs\\Test-Tech-Stack\\tests\\test-sort.js",
      "file": "\\tests\\test-sort.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bd3a65e4-f218-4c11-886f-3897ef1c5565",
          "title": "SauceDemo Test - Login and Sort A-Z",
          "fullFile": "C:\\xampp\\htdocs\\Test-Tech-Stack\\tests\\test-sort.js",
          "file": "\\tests\\test-sort.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"SauceDemo Test - Login and Sort A-Z\"",
              "fullTitle": "SauceDemo Test - Login and Sort A-Z \"before each\" hook in \"SauceDemo Test - Login and Sort A-Z\"",
              "timedOut": false,
              "duration": 3824,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new firefox.Options();\ndriver = await new Builder().forBrowser('firefox').setFirefoxOptions(options).build();\nawait driver.get('https://www.saucedemo.com');\nif (!fs.existsSync('screencapture')) {\n    fs.mkdirSync('screencapture');\n}",
              "err": {},
              "uuid": "19ac050c-ca90-4dc7-a211-f351edb3bb45",
              "parentUUID": "bd3a65e4-f218-4c11-886f-3897ef1c5565",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"SauceDemo Test - Login and Sort A-Z\"",
              "fullTitle": "SauceDemo Test - Login and Sort A-Z \"after each\" hook in \"SauceDemo Test - Login and Sort A-Z\"",
              "timedOut": false,
              "duration": 711,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "72763e81-d723-430a-b16f-bf7615b6d3d8",
              "parentUUID": "bd3a65e4-f218-4c11-886f-3897ef1c5565",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should login successfully and sort products A-Z",
              "fullTitle": "SauceDemo Test - Login and Sort A-Z should login successfully and sort products A-Z",
              "timedOut": false,
              "duration": 1035,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Login POM\nawait PageLogin.login(driver, 'standard_user', 'secret_sauce');\nawait driver.wait(until.urlContains('inventory.html'), 10000);\nawait driver.wait(until.elementLocated(By.className('inventory_list')), 10000);\n//Visual testing\nlet ss_redirect = await driver.takeScreenshot();\nfs.writeFileSync('screencapture/current.png', Buffer.from(ss_redirect, 'base64'));\nif (!fs.existsSync(\"screencapture/baseline.png\")) {\n    fs.copyFileSync(\"screencapture/current.png\", \"screencapture/baseline.png\");\n    console.log(\"Baseline image saved.\")\n}\nlet img1 = PNG.sync.read(fs.readFileSync(\"screencapture/baseline.png\"));\nlet img2 = PNG.sync.read(fs.readFileSync(\"screencapture/current.png\"));\nlet { width, height } = img1;\nlet diff = new PNG({ width, height});\nlet numDiffPixels = pixelmatch(img1.data, img2.data, diff.data, width, height, { threshold: 0.1});\nfs.writeFileSync(\"screencapture/diff.png\", PNG.sync.write(diff));\nif (numDiffPixels > 0) {\n    console.log(`Visual differences found! Pixels different: ${numDiffPixels}`);\n} else {\n    console.log(\"No visual differences found.\");\n}\nlet ss_loginRedirect = await driver.takeScreenshot();\nfs.writeFileSync('screencapture/ss_login_redirect_inventory_page.png', Buffer.from(ss_loginRedirect, 'base64'));\nconst currentUrl = await driver.getCurrentUrl();\nassert.ok(currentUrl.includes('inventory.html'), 'Login failed and the User was not redirected to inventory page');\nconst sortDropdown = await driver.findElement(By.css('[data-test=\"product-sort-container\"]'));\nassert.strictEqual(await sortDropdown.isDisplayed(), true, 'The Sorting Dropdown is not visible');\nconst select = new Select(sortDropdown); \nawait select.selectByVisibleText('Name (A to Z)');\nawait driver.wait(async () => {\n    const firstItem = await driver.findElement(By.css('.inventory_item_name')).getText();\n    return firstItem === 'Sauce Labs Backpack';\n}, 5000);\nconst nameElements = await driver.findElements(By.className('inventory_item_name'));\nconst productNames = [];\nfor (let el of nameElements) {\n    productNames.push(await el.getText());\n}\nconst sortedNames = [...productNames].sort();\nassert.deepStrictEqual(productNames, sortedNames, 'Products are not sorted from A to Z');",
              "err": {},
              "uuid": "6a8e97ed-404c-4218-aef4-40113eced386",
              "parentUUID": "bd3a65e4-f218-4c11-886f-3897ef1c5565",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with locked_out_user",
              "fullTitle": "SauceDemo Test - Login and Sort A-Z Login with locked_out_user",
              "timedOut": false,
              "duration": 2164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new firefox.Options();\noptions.addArguments(\"--headless\");\nawait driver.get('https://www.saucedemo.com');\nconst title = await driver.getTitle();\n// assert: memastikan object sama persis\nassert.strictEqual(title, 'Swag Labs');\n//Login POM\nawait PageLogin.login(driver, 'locked_out_user', 'secret_sauce');\n\n// element eror\nconst errorElement = await driver.wait(\n    until.elementLocated(By.css('[data-test=\"error\"]')),\n    6000\n);\n//assert\nconst errorText = (await errorElement.getText()).trim();\nassert.strictEqual(errorText, \"Epic sadface: Sorry, this user has been locked out.\");\n//screenshot\nlet ss_errorText = await errorElement.takeScreenshot();\nfs.writeFileSync('screencapture/ss_errorText.png', Buffer.from(ss_errorText, 'base64'));\nawait driver.sleep(1700)",
              "err": {},
              "uuid": "eed2b8d5-213e-4f6a-9b2c-3d39af25532a",
              "parentUUID": "bd3a65e4-f218-4c11-886f-3897ef1c5565",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check saucedemo availabilty",
              "fullTitle": "SauceDemo Test - Login and Sort A-Z Check saucedemo availabilty",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "4710cd10-bab3-4fa4-a67c-6de9247e0eff",
              "parentUUID": "bd3a65e4-f218-4c11-886f-3897ef1c5565",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a8e97ed-404c-4218-aef4-40113eced386",
            "eed2b8d5-213e-4f6a-9b2c-3d39af25532a"
          ],
          "failures": [],
          "pending": [
            "4710cd10-bab3-4fa4-a67c-6de9247e0eff"
          ],
          "skipped": [],
          "duration": 3199,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}